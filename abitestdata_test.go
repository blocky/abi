// Code generated by abi-testdata DO NOT EDIT.
//
// See github/blocky/abi-testdata/README.md for more information

package abi_test

import "encoding/hex"

func hexDecode(s string) []byte {
	r, err := hex.DecodeString(s)
	if err != nil {
		panic(err)
	}
	return r
}

type SliceOfBytesExample struct {
	name    string
	native  [][]byte
	encoded []byte
}

type AllInts struct {
	Val1 uint64
	Val2 uint64
	Val3 uint64
}

type AllIntsExample struct {
	name    string
	native  AllInts
	encoded []byte
}

type IntAndBytes struct {
	Int1   uint64
	Bytes1 []byte
	Bytes2 []byte
}

type IntAndBytesExample struct {
	name    string
	native  IntAndBytes
	encoded []byte
}

var testData = struct {
	sliceOfBytes []SliceOfBytesExample
	allInts      []AllIntsExample
	intAndBytes  []IntAndBytesExample
}{
	sliceOfBytes: []SliceOfBytesExample{
		{
			name: "slice-of-bytes-emptyBytes",
			native: [][]byte{
				[]byte(""),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-oneByte",
			native: [][]byte{
				[]byte("a"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000016100000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-someBytes1",
			native: [][]byte{
				[]byte("hello"),
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-someBytes2",
			native: [][]byte{
				[]byte("world"),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-alignedBytes",
			native: [][]byte{
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002033322d62797465732d7878787878787878787878787878787878787878787878"),
		},
		{
			name: "slice-of-bytes-someBytes1-emptyBytes",
			native: [][]byte{
				[]byte("hello"),
				[]byte(""),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-emptyBytes-someBytes1",
			native: [][]byte{
				[]byte(""),
				[]byte("hello"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-emptyBytes-someBytes1-emptyBytes",
			native: [][]byte{
				[]byte(""),
				[]byte("hello"),
				[]byte(""),
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-someBytes1-emptyBytes-someBytes2",
			native: [][]byte{
				[]byte("hello"),
				[]byte(""),
				[]byte("world"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000568656c6c6f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-someBytes1-someBytes2",
			native: [][]byte{
				[]byte("hello"),
				[]byte("world"),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-someBytes1-alignedBytes",
			native: [][]byte{
				[]byte("hello"),
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002033322d62797465732d7878787878787878787878787878787878787878787878"),
		},
		{
			name: "slice-of-bytes-alignedBytes-someBytes1",
			native: [][]byte{
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
				[]byte("hello"),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002033322d62797465732d7878787878787878787878787878787878787878787878000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "slice-of-bytes-alignedBytes-someBytes1-alignedBytes",
			native: [][]byte{
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
				[]byte("hello"),
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002033322d62797465732d7878787878787878787878787878787878787878787878000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002033322d62797465732d7878787878787878787878787878787878787878787878"),
		},
		{
			name: "slice-of-bytes-someBytes1-alignedBytes-someBytes2",
			native: [][]byte{
				[]byte("hello"),
				[]byte("32-bytes-xxxxxxxxxxxxxxxxxxxxxxx"),
				[]byte("world"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000568656c6c6f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002033322d62797465732d78787878787878787878787878787878787878787878780000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
	},

	allInts: []AllIntsExample{
		{
			name: "all-ints-xxx",
			native: AllInts{
				Val1: 179131,
				Val2: 137,
				Val3: 27919810352,
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000002bbbb00000000000000000000000000000000000000000000000000000000000000890000000000000000000000000000000000000000000000000000000680267f30"),
		},
		{
			name: "all-ints-0x0",
			native: AllInts{
				Val1: 0,
				Val2: 1,
				Val3: 0,
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "all-ints-x0x",
			native: AllInts{
				Val1: 10,
				Val2: 0,
				Val3: 250,
			},
			encoded: hexDecode("000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa"),
		},
	},

	intAndBytes: []IntAndBytesExample{
		{
			name: "int-an-bytes-xxx",
			native: IntAndBytes{
				Int1:   1,
				Bytes1: []byte("hello"),
				Bytes2: []byte("world"),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "int-an-bytes-0x0",
			native: IntAndBytes{
				Int1:   0,
				Bytes1: []byte("hello"),
				Bytes2: []byte(""),
			},
			encoded: hexDecode("0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000568656c6c6f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
		},
		{
			name: "all-ints-x0x",
			native: IntAndBytes{
				Int1:   1,
				Bytes1: []byte(""),
				Bytes2: []byte("world"),
			},
			encoded: hexDecode("00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005776f726c64000000000000000000000000000000000000000000000000000000"),
		},
	},
}
